Parameters:
  BedrockModelId:
    Type: String
    Description: The ID of the Foundation Model to use for the Agent
    Default: us.anthropic.claude-3-5-sonnet-20241022-v2:0
  RedshiftDatabaseName:
    Type: String
    Default: dev
  RedshiftUserName:
    Type: String
    Default: admin
  RedshiftPassword:
    Type: String
    NoEcho: true
    Description: "STORE SECURELY - The password for the Redshift master user. Must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number."
    MinLength: 8
    MaxLength: 64
    AllowedPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d!@#$%^&*()_+\-=\[\]{};:'",.<>?]{8,64}$
    ConstraintDescription: "Password must be between 8 and 64 characters, and contain at least one uppercase letter, one lowercase letter, and one number."
  GithubLink:
    Type: String
    Description: "The link to the agent build cloudformation stack"
    Default: "https://github.com/aws-samples/amazon-bedrock-agents-healthcare-lifesciences.git"
  GitBranch:
    Type: String
    Description: The github branch to clone
    Default: main
  ReactAppAllowedCidr:
    Type: String
    Description: "Allowed CIDR block (X.X.X.X/X) for React App UI access"
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid CIDR block in format x.x.x.x/x
  TavilyApiKey:
    Type: String
    NoEcho: true
    Description: Provide TavilyApiKey API Key to utilize /web_search path
    Default: ""
  USPTOApiKey:
    Type: String
    NoEcho: true
    Description: Provide USPTO API Key to utilize /search path
    Default: ""
  DeployApplication:
    Type: String
    Description: Select true to deploy the react application. Select false to only build the application.
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

Conditions:
  CreateCompetitiveIntelAgent:
    !Not [!Or [!Equals [!Ref TavilyApiKey, ""], !Equals [!Ref USPTOApiKey, ""]]]
  CreateReactApp: !Equals [!Ref DeployApplication, "true"]

Resources:
  ##################################################################
  # VPC
  ##################################################################

  Network:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./build/network.yaml
      TimeoutInMinutes: 10

  ##################################################################
  # S3
  ##################################################################

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-${AWS::Region}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ##################################################################
  # Custom Resources to Package Agent Templates
  ##################################################################

  CodeBuild:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: build/codebuild.yaml
      Parameters:
        GithubLink: !Ref GithubLink
        GitBranch: !Ref GitBranch
        S3Bucket: !Ref S3Bucket
      TimeoutInMinutes: 10

  ##################################################################
  # React Application
  ##################################################################

  ReactAppDockerBuildNestedStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateReactApp
    Properties:
      TemplateURL: ui/cloudformation/docker_build_pipeline.yml
      Parameters:
        ProjectName: toolkit-react-ui
        GithubLink: !Ref GithubLink
        GitBranch: !Ref GitBranch
      TimeoutInMinutes: 35

  ReactAppEcsBuildNestedStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateReactApp
    Properties:
      TemplateURL: ui/cloudformation/ecs.yml
      Parameters:
        VPCId: !GetAtt Network.Outputs.VPC
        AllowedCidr: !Ref ReactAppAllowedCidr
        PublicSubnet1: !GetAtt Network.Outputs.PublicSubnet1
        PublicSubnet2: !GetAtt Network.Outputs.PublicSubnet2
        ImageUrl: !GetAtt
          - ReactAppDockerBuildNestedStack
          - Outputs.ECRRepositoryURI
      TimeoutInMinutes: 35

    ##################################################################
    # Amazon Bedrock Agents Service Role
    ##################################################################

  AgentRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - bedrock.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: BedrockInvokeModel
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:*
                Resource:
                  - !Sub arn:${AWS::Partition}:bedrock:*::foundation-model/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:knowledge-base/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:inference-profile/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:application-inference-profile/*
                  - !Sub arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:guardrail/*

  #################################################################################################################################################
  #################################################################################################################################################
  #    _                _      ___      _        _
  #   /_\  __ _ ___ _ _| |_   / __|__ _| |_ __ _| |___  __ _
  #  / _ \/ _` / -_) ' \  _| | (__/ _` |  _/ _` | / _ \/ _` |
  # /_/ \_\__, \___|_||_\__|  \___\__,_|\__\__,_|_\___/\__, |
  #       |___/                                        |___/
  #################################################################################################################################################
  #################################################################################################################################################

  # BiomarkerDiscoveryAgentNestedStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn:
  #     - TriggerAgentBuildWaitCondition
  #   Properties:
  #     TemplateURL: !Sub https://${S3Bucket}.s3.${AWS::Region}.amazonaws.com/packaged_agent_build.yaml
  #     Parameters:
  #       BedrockModelId: !Ref BedrockModelId
  #       RedshiftDatabaseName: !Ref RedshiftDatabaseName
  #       RedshiftUserName: !Ref RedshiftUserName
  #       RedshiftPassword: !Ref RedshiftPassword
  #       MultiAgentDevMode: "false"
  #       EnvironmentName: env1
  #       GitRepoURL: !Ref GithubLink
  #       GitBranch: !Ref GitBranch
  #       SubAgentS3Bucket: !Ref S3Bucket
  #       VPC: !GetAtt Network.Outputs.VPC
  #       PrivateSubnet1: !GetAtt Network.Outputs.PrivateSubnet1
  #       PrivateSubnet2: !GetAtt Network.Outputs.PrivateSubnet2
  #       AgentRole: !GetAtt AgentRole.Arn
  #     TimeoutInMinutes: 30

  # ClinicalTrialProtocolSupervisorStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn:
  #     - CodeBuild
  #   Properties:
  #     TemplateURL: !Sub https://${S3Bucket}.s3.${AWS::Region}.amazonaws.com/agents_catalog/packaged_clinical-trial-protocol-assistant-cfn.yaml
  #     Parameters:
  #       BedrockModelId: !Ref BedrockModelId
  #       AgentIAMRoleArn: !GetAtt AgentRole.Arn
  #       S3Bucket: !Ref S3Bucket
  #     TimeoutInMinutes: 10

  CompetitiveIntelligenceSupervisorStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateCompetitiveIntelAgent
    DependsOn:
      - CodeBuild
    Properties:
      TemplateURL: multi_agent_collaboration/competitive_intelligence/competitive-intelligence-agent-cfn.yaml
      Parameters:
        BedrockModelId: !Ref BedrockModelId
        TavilyApiKey: !Ref TavilyApiKey
        USPTOApiKey: !Ref USPTOApiKey
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
        S3Bucket: !Ref S3Bucket
      TimeoutInMinutes: 10

  WileyOnlineSearchStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: agents_catalog/18-Wiley-OA-life-sciences-agent/wiley-search-agent-cfn.yaml
      Parameters:
        AgentIAMRoleArn: !GetAtt AgentRole.Arn
      TimeoutInMinutes: 10

#################################################################################################################################################
#################################################################################################################################################

Outputs:
  ReactAppExternalURL:
    Condition: CreateReactApp
    Value:
      Fn::GetAtt:
        - ReactAppEcsBuildNestedStack
        - Outputs.ExternalUrl
    Description: ALB DNS for the React App
  AgentRole:
    Value: !GetAtt AgentRole.Arn
    Description: Amazon Bedrock Agents Service Role ARN

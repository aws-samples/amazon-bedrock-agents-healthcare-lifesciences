AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the SEC 10-K agent for searching using the EDGAR API.
Parameters:
  AgentAliasName:
    Type: String
    Default: ""
  BedrockModelId:
    Type: String
    Description: The ID of the Foundation Model to use for the Agent
    Default: us.anthropic.claude-3-5-sonnet-20240620-v1:0
  AgentIAMRoleArn:
    Type: String
    Description: The arn for the agent IAM role
  UserAgentString:
    Type: String
    NoEcho: true
    Description: User Agent string for the EDGAR API request
    Default: "Amazon Web Services aws-hcls-ml-sa@amazon.com"

Conditions:
  CreateAgentAliasCondition: !Not [!Equals [!Ref AgentAliasName, ""]]

Resources:
  ########################
  ##### SEC10K Search #####
  ######################

  SEC10KSearchLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.13
      Handler: index.lambda_handler
      Role: !GetAtt SEC10KSearchLambdaRole.Arn
      Timeout: 30
      MemorySize: 128
      Environment:
        Variables:
          ACTION_GROUP: "SEC10KSearchLambdaActionGroup"
          LOG_LEVEL: "DEBUG"
          USER_AGENT: !Ref UserAgentString
      Code: "action-groups/SEC-10-K-search/my_deployment_package.zip"

  SEC10KSearchLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  SEC10KSearchLambdaAgentPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SEC10KSearchLambdaFunction.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*

  SEC10KSearchLambdaAgentAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SEC10KSearchLambdaFunction.Arn
      Principal: bedrock.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*

  #####################
  ##### Agent #####
  ###################

  SEC10KSearchAgent:
    Type: AWS::Bedrock::Agent
    Properties:
      ActionGroups:
        - ActionGroupName: "UserInputAction"
          ParentActionGroupSignature: "AMAZON.UserInput"
          ActionGroupState: "ENABLED"
        - ActionGroupName: "CodeInterpreterAction"
          ParentActionGroupSignature: "AMAZON.CodeInterpreter"
          ActionGroupState: "ENABLED"
        - ActionGroupName: SEC10KSearch
          Description: Actions for answering questions with information from the internet
          ActionGroupExecutor:
            Lambda: !GetAtt SEC10KSearchLambdaFunction.Arn
          ActionGroupState: ENABLED
          FunctionSchema:
            Functions:
              # - Name: get_company_facts
              #   Description: Get all SEC facts for a given company. Requests data from the data.sec.gov/api/xbrl/companyfacts/ API endpoint.
              #   Parameters:
              #     company_name:
              #       Description: "Company name, e.g. Amazon or Pfizer"
              #       Type: string
              #       Required: True
              # - Name: list_available_facts
              #   Description: List the available SEC facts for a given company. May be used to identify the "taxonomy" and "tag" values to provide as input to to the get_company_concept function.
              #   Parameters:
              #     company_name:
              #       Description: "Company name, e.g. Amazon or Pfizer"
              #       Type: string
              #       Required: True
              - Name: get_company_concept
                Description: Get the data for a company concept for a specified CIK. Requests data from the data.sec.gov/api/xbrl/companyconcept/ API endpoint. Returns all the XBRL disclosures for a single company (CIK) and concept (taxonomy and tag), with a separate array of facts for each unit of measure that the company has chosen to disclose (e.g. net profits reported in U.S. dollars and in Canadian dollars).
                Parameters:
                  company_name:
                    Description: "Company name, e.g. Amazon or Pfizer"
                    Type: string
                    Required: True
                  taxonomy:
                    Description: Electronic dictionary of business reporting elements used to report business data. One of 'dei', 'us-gaap', or 'srt'. A taxonomy may have zero or more associated tags.
                    Type: string
                    Required: True
                  tag:
                    Description: An identifier that highlights specific information to EDGAR that is in the format required by the EDGAR Filer Manual. e.g. 'EntityCommonStockSharesOutstanding', 'AcceleratedShareRepurchasesFinalPricePaidPerShare'
                    Type: string
                    Required: True
      AgentName:
        !Join [
          "-",
          [
            "sec-10-k-search-agent",
            !Select [
              4,
              !Split ["-", !Select [2, !Split ["/", !Ref "AWS::StackId"]]],
            ],
          ],
        ]
      AgentResourceRoleArn: !Ref AgentIAMRoleArn
      AutoPrepare: True
      Description: "Perform financial analysis of a given company using the their SEC 10-K filings in the EDGAR database"
      FoundationModel: !Ref BedrockModelId
      GuardrailConfiguration:
        GuardrailIdentifier: !GetAtt SEC10KSearchGuardrail.GuardrailId
        GuardrailVersion: !GetAtt SEC10KSearchGuardrail.Version
      Instruction: |
        You are an expert financial analyst specializing in public company analysis using SEC 10-K data. Help users analyze companies by retrieving and interpreting financial data through the SEC EDGAR API tools.

        You have access to the following tool:

          - get_company_concept: Retrieve specific financial metrics using taxonomy (dei/us-gaap/srt) and tag parameters

        You also have the ability to generate and run code. This could be useful for statistical analysis or data visualization.

        Analysis Process

          1. Begin by asking which company the user wants to analyze, if not provided.
          2. Determine which specific financial metrics are relevant based on the user's goals.
          3. Use get_company_concept to retrieve targeted financial data.
          4. Analyze trends, calculate financial ratios, and provide insights. Generate and run code as needed.
          5. Present your analysis in a clear, structured format with relevant visualizations or tables.

        Response Guidelines

          - Provide concise, actionable insights based on the data
          - Explain financial concepts in accessible language
          - Include relevant metrics like revenue growth, profitability ratios, and balance sheet analysis
          - Highlight notable trends or concerns
          - Make appropriate comparisons to industry standards when possible
          - Acknowledge data limitations and gaps where they exist

  AgentAliasResource:
    Type: AWS::Bedrock::AgentAlias
    Condition: CreateAgentAliasCondition
    Properties:
      AgentId: !GetAtt SEC10KSearchAgent.AgentId
      AgentAliasName: !Ref AgentAliasName

  SEC10KSearchGuardrail:
    Type: AWS::Bedrock::Guardrail
    Properties:
      BlockedInputMessaging: "Sorry, your query violates our usage policies."
      BlockedOutputsMessaging: "Sorry, I am unable to reply because the output violates our usage policies."
      ContentPolicyConfig:
        FiltersConfig:
          - InputStrength: "HIGH"
            OutputStrength: "NONE"
            Type: "PROMPT_ATTACK"
      Description: Turn on to block profane words and other harmful content.
      Name: SEC10KSearchGuardrail
      WordPolicyConfig:
        ManagedWordListsConfig:
          - Type: PROFANITY

Outputs:
  AgentId:
    Description: Agent ID
    Value: !Ref SEC10KSearchAgent
  AgentAliasId:
    Description: Agent Alias ID
    Value: !GetAtt AgentAliasResource.AgentAliasId
    Condition: CreateAgentAliasCondition

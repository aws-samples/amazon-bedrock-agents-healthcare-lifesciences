AWSTemplateFormatVersion: "2010-09-09"
Description: "Amazon Bedrock Agentcore Runtime stack"

Parameters:
  ProjectName:
    Type: String
    Description: "Name of the project for resource naming and tagging"
    Default: "myProject"
    AllowedPattern: "^[a-zA-Z0-9-]+$"
    ConstraintDescription: "Must contain only alphanumeric characters and hyphens"
  S3CodeBucket:
    Description: Name of the S3 bucket to use for deployment and run storage
    Type: String
  S3CodeKey:
    Description: S3 key for the zip file containing CodeBuild code
    Type: String
  BuildContextPath:
    Description: Path to the build context directory
    Type: String
    Default: "."
  Timestamp:
    Description: Timestamp for the cfn deployment
    Type: Number
    Default: 9999999999
  WaitForCodeBuild:
    Description: Should CloudFormation wait for CodeBuild?
    Type: String
    Default: "N"
    AllowedValues: [Y, N]
  KendraIndexId:
    Description: Kendra index ID
    Type: String

Resources:
  Container:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: "container.yaml"
      Parameters:
        S3CodeBucket: !Ref S3CodeBucket
        S3CodeKey: !Ref S3CodeKey
        BuildContextPath: !Ref BuildContextPath
        Timestamp: !Ref Timestamp
        WaitForCodeBuild: !Ref WaitForCodeBuild
        BuildEnvironmentType: "ARM_CONTAINER"
        BuildComputeType: "BUILD_GENERAL1_SMALL"
        BuildImage: "aws/codebuild/amazonlinux2-aarch64-standard:3.0"
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Component
          Value: Container

  AgentCoreRuntimeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock-agentcore.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AgentCoreRuntimeExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: ECRImageAccess
                Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                Resource:
                  - !Sub "arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Container.Outputs.ECRRepositoryName}"
              - Effect: Allow
                Action:
                  - logs:DescribeLogStreams
                  - logs:CreateLogGroup
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/bedrock-agentcore/runtimes/*"
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/bedrock-agentcore/runtimes/*:log-stream:*"
              - Sid: ECRTokenAccess
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource:
                  - "*"
              - Effect: Allow
                Resource: "*"
                Action: cloudwatch:PutMetricData
                Condition:
                  StringEquals:
                    cloudwatch:namespace: bedrock-agentcore
              - Sid: BedrockModelInvocation
                Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                Resource:
                  - !Sub "arn:${AWS::Partition}:bedrock:*::foundation-model/*"
                  - !Sub "arn:${AWS::Partition}:bedrock:${AWS::Region}:${AWS::AccountId}:*"
              - Sid: KendraAccess
                Effect: Allow
                Action:
                  - kendra:Retrieve
                  - kendra:Query
                Resource: !Sub "arn:${AWS::Partition}:kendra:${AWS::Region}:${AWS::AccountId}:index/${KendraIndexId}"
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Component
          Value: AgentCoreRuntimeRole
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "ecr:GetAuthorizationToken and the xray actions do not support resource types"

  AgentRuntime:
    Type: AWS::BedrockAgentCore::Runtime
    Properties:
      AgentRuntimeArtifact:
        ContainerConfiguration:
          ContainerUri: !GetAtt Container.Outputs.ContainerURI
      AgentRuntimeName: "kb_agent"
      Description: "Basic agent with access to knowledge base"
      EnvironmentVariables:
        KENDRA_INDEX_ID: !Ref KendraIndexId
      NetworkConfiguration:
        NetworkMode: "PUBLIC"
      ProtocolConfiguration: "HTTP"
      RoleArn: !GetAtt AgentCoreRuntimeRole.Arn
      Tags:
        Project: !Ref ProjectName
        Component: KBAgentRuntime
        Timestamp: !Ref Timestamp

Outputs:
  AgentcoreRuntimeExecutionRoleArn:
    Description: "AgentCore Runtime execution role ARN"
    Value: !GetAtt AgentCoreRuntimeRole.Arn
  ContainerURI:
    Description: The URI of the container
    Value: !GetAtt Container.Outputs.ContainerURI
  CodeBuildProjectName:
    Description: The name of the CodeBuild project
    Value: !GetAtt Container.Outputs.CodeBuildProjectName
  CodeBuildLambdaArn:
    Description: The ARN of the CodeBuild lambda trigger
    Value: !GetAtt Container.Outputs.CodeBuildLambdaArn
  ECRRepositoryName:
    Description: ECR Repository Name
    Value: !GetAtt Container.Outputs.ECRRepositoryName
  AgentRuntimeArn:
    Description: Agent runtime ARN
    Value: !GetAtt AgentRuntime.AgentRuntimeArn
  AgentRuntimeId:
    Description: Agent runtime ID
    Value: !GetAtt AgentRuntime.AgentRuntimeId
